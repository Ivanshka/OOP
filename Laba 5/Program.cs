using System;

namespace Laba_5
{
    /*  C# Code Convention: http://rsdn.org/article/mag/200401/codestyle.XML#EX
        Наследование, композиция, агрегация: https://habr.com/ru/post/354046/

        Ассоциация: один класс включает в себя другой класс в качестве одного из полей. 
        Ассоциация, частные случаи: композиция и агрегация.

        Композиция: объект 1 не существует отдельно от главного объекта 2. Он создается при создании
        главного объекта и полностью им управляется. В типичном примере, объект 1 будет создаваться
        в конструкторе главного объекта.

        Агрегация: объект 1 создается где-то в другом месте кода и передается в конструктор класса 2
        в качестве параметра.
    */
    /*
        Испытание, Тест, Экзамен, Выпускной экзамен, Вопрос

                          Схема наследования:
                          
                         _______Испытание______
                        /           |          \
                      Тест   ICheck |       Вып.экз.
                                   \|        
                                    |
                                 Экзамен

                           Схема композиции:

        Тест -> 5 х Вопрос
        Экзамен -> 2 х Вопрос
        Вып.экз. -> 4 х Вопрос

    */

    /// <summary>
    /// Интерфейс "ЯПроверяемый"
    /// </summary>
    interface ICheck
    {
        void Method();
    }

    class Program
    {
        static void Main()
        {
            Console.WriteLine("Вызываем метод Test() с разной реализацией для класса и интерфейса...");
            Examination ex1 = new Examination("Физика", "8:00", "Что такое дилектрик?", "Это изолятор, пропускающий ток", "Что делает электродвигатель на 5 В при подключении 55 В??", "Сгорает к чертям");
            ex1.Method();
            (ex1 as ICheck).Method(); // или же ((ICheck)examination).Test();

            Console.WriteLine("Создаем объекты различных классов и выводим инфу через ссылки на абстрактный класс / интерфейс.");
            Examination ex2 = new Examination("ОАиП", "8:00", "Самый страшный Звэр на свете?", "Бедодел.", "Кто такой Бедодел?", "Рейд-босс первашей.");
            FinalExamination fex1 = new FinalExamination("ОС", "8:30", "Что такое ОС?", "Набор прог", "Что такое ОЗУ?", "Оперативное запоминающее устройство", "Что такое ЦП?", "Центральный процессор", "Зачем он нужен?", "Он - \"мозг\" компа");
            Console.WriteLine("Первый экзамен: " + ex2.Name);
            Console.WriteLine("Время второго: " + fex1.Time);
            
            Console.WriteLine($"\n Вызываем ToString() для объектов массива...");
            // сделаем один тест, а то попусту класс создан
            string[] questions = { "Что такое парсек?", "Где находится Черная дыра?", "Газовые гиганты Солнечной системы?", "Созвездие в виде буквы W?", "Звезда, переливающаяся зеленым, желтым и синим цветами?" };
            string[] answers = { "Единица измерения расстояния, равная расстоянию до объекта. :D ", "В центре галактики", "Юпитер, Сатурн, Уран, Нептун", "Кассиопея", "Капелла" };
            Test test = new Test("Астрономия", "10:05", questions, answers);

            Ispitanie[] mas = new Ispitanie[4];
            // заносим в массив ссылки на объекты производных классов
            mas[0] = ex1;
            mas[1] = ex2;
            mas[2] = fex1;
            mas[3] = test;

            // создаем "принтер"
            Printer p = new Printer();

            for (int i = 0; i < mas.Length; i++)
                p.iAmPrinting(mas[i]);
            
            Console.WriteLine("\nDone.");

            Console.ReadKey();
        }
    }
}
